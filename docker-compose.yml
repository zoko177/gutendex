volumes:
  post_db:


services:
  ngi:
    image: nginx:stable-alpine
    restart: always
    depends_on:
      - py_app
    volumes:
      - ./project/static:/usr/share/nginx/html/static
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 80:80
    networks:
      - front
  
  postgres_db:
    image: postgres:14-alpine
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_DB: ${DATABASE_NAME}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d ${DATABASE_NAME} -U ${DATABASE_USER}"]
      interval: 1s
      timeout: 1s
      retries: 20
    volumes:
      - post_db:/var/lib/postgresql/data
    networks:
      - back

  py_app:
    build: .
    container_name: py_app
    restart: always
    depends_on:
      postgres_db:
        condition: service_healthy
    ports:
      - 8000:8000
    networks:
      - front
      - back

networks:
  front:
  back:
